// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

package com.config;

import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;

import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;

@ExtendWith(MockitoExtension.class)
public class MyConfig_configure_0ce24f1667_Test {

    @InjectMocks
    MyConfig myConfig;

    @Mock
    DaoAuthenticationProvider authenticationProvider1;

    @Mock
    DaoAuthenticationProvider authenticationProvider2;
    
    @Mock
    AuthenticationManagerBuilder auth;

    @Test
    public void test_configure_successful() throws Exception {
        myConfig.configure(auth);
        verify(auth, times(1)).authenticationProvider(authenticationProvider1);
        verify(auth, times(1)).authenticationProvider(authenticationProvider2);
    }

    @Test
    public void test_configure_failure() throws Exception {
        doThrow(new RuntimeException()).when(auth).authenticationProvider(authenticationProvider1);
        RuntimeException runtimeException = assertThrows(RuntimeException.class, () -> myConfig.configure(auth));
        assertEquals("Some custom message indicating what error occurred", runtimeException.getMessage());
    }
}
