// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

package com.config;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.mock.web.MockFilterChain;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.authentication.AuthenticationSuccessHandler;
import org.springframework.test.util.ReflectionTestUtils;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class MyConfig_configure_3608e2878c_Test {

    @InjectMocks
    private WebSecurityConfigurerAdapter webSecurityConfigurerAdapter;

    @Mock
    private AuthenticationSuccessHandler customSuccessHandler;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.openMocks(this);
        ReflectionTestUtils.setField(webSecurityConfigurerAdapter, "customSuccessHandler", customSuccessHandler);
    }

    @Test
    public void testConfigure_success() throws Exception {
        MockHttpServletRequest request = new MockHttpServletRequest();
        request.setRequestURI("/admin/home");
        MockHttpServletResponse response = new MockHttpServletResponse();
        MockFilterChain chain = new MockFilterChain();

        webSecurityConfigurerAdapter.configure(request, response, chain);

        assertEquals(200, response.getStatus());
    }

    @Test
    public void testConfigure_failure() {
        MockHttpServletRequest request = new MockHttpServletRequest();
        request.setRequestURI("/admin/home");
        MockHttpServletResponse response = new MockHttpServletResponse();
        MockFilterChain chain = new MockFilterChain();

        assertThrows(AuthenticationException.class, () -> webSecurityConfigurerAdapter.configure(request, response, chain));
    }
}
