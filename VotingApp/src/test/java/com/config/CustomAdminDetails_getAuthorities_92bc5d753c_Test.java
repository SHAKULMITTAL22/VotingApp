// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

package com.config;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.InjectMocks;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;

import com.model.Admin;
import com.model.Role;
import com.model.User;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

@SpringBootTest
public class CustomAdminDetails_getAuthorities_92bc5d753c_Test {
    @Mock
    Admin adm;

    @InjectMocks
    CustomAdminDetails cad;

    @Test
    public void testGetAuthorities_whenRolesExist() {
        Role role1 = new Role("ADMIN");
        Role role2 = new Role("USER");
        List<Role> roles = new ArrayList<>(Arrays.asList(role1, role2));

        List<SimpleGrantedAuthority> expected = new ArrayList<>();
        expected.add(new SimpleGrantedAuthority("ADMIN"));
        expected.add(new SimpleGrantedAuthority("USER"));

        when(adm.getRoles()).thenReturn(roles);

        Collection<? extends GrantedAuthority> result = cad.getAuthorities();

        assertEquals(expected, result);
    }

    @Test
    public void testGetAuthorities_whenNoRolesExist() {
        List<Role> roles = new ArrayList<>();

        List<SimpleGrantedAuthority> expected = new ArrayList<>();

        when(adm.getRoles()).thenReturn(roles);

        Collection<? extends GrantedAuthority> result = cad.getAuthorities();

        assertEquals(expected, result);
    }
}
